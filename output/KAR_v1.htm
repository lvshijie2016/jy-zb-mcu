<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\output\KAR_v1.0]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\output\KAR_v1.0</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Sun Oct 15 16:20:45 2017
<BR><P>
<H3>Maximum Stack Usage =         88 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; sys_init &rArr; gpio_init &rArr; get_gpio &rArr; SYS_IOCONInit
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[f]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[f]">ADC_IRQHandler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[11]">BOD_IRQHandler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[12]">GPIOA_IRQHandler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[13]">GPIOB_IRQHandler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[14]">GPIOC_IRQHandler</a> from user_it.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[7]">PWM_FAULT_IRQHandler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[17]">PWM_TIMER_IRQHandler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[15]">RTC_IRQHandler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[16]">SPI_IRQHandler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[9]">TIMER16_0_IRQHandler</a> from user_timer.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[a]">TIMER16_1_IRQHandler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[b]">TIMER16_2_IRQHandler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[c]">TIMER16_3_IRQHandler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[8]">TWS_IRQHandler</a> from c32f0xx_iic.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[d]">UART0_IRQHandler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[e]">UART1_IRQHandler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[6]">WAKEUP_IRQHandler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[10]">WDT_IRQHandler</a> from startup_c32f0xx_s.o(.text) referenced from startup_c32f0xx_s.o(RESET)
 <LI><a href="#[19]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_c32f0xx_s.o(.text)
 <LI><a href="#[18]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[19]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(.text)
</UL>
<P><STRONG><a name="[4a]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[49]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4b]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[4c]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[4d]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[4e]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[4f]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1c]"></a>Handler_event</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Handler_event
</UL>
<BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_all_event
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPin
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetPin
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = main &rArr; sys_init &rArr; gpio_init &rArr; get_gpio &rArr; SYS_IOCONInit
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handler_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[21]"></a>get_gpio</STRONG> (Thumb, 280 bytes, Stack size 40 bytes, config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = get_gpio &rArr; SYS_IOCONInit
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_IOCONInit
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_EnablePhrClk
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EnableInt
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigPinsAsOutput
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigPinsAsInput
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[28]"></a>gpio_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gpio_init &rArr; get_gpio &rArr; SYS_IOCONInit
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[29]"></a>timer0_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = timer0_init &rArr; CT16B0_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT16B0_ResetTimerCounter
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT16B0_Init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT16B0_EnableInt
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT16B0_ConfigMatch
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[20]"></a>sys_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sys_init &rArr; gpio_init &rArr; get_gpio &rArr; SYS_IOCONInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SystemInitial
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_init
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>clear_all_event</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, user_it.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handler_event
</UL>

<P><STRONG><a name="[14]"></a>GPIOC_IRQHandler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, user_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIOC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Read_INTState
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Clear_INT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>set_soft_timer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_delay_ms
</UL>

<P><STRONG><a name="[33]"></a>check_soft_timeout</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, user_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_delay_ms
</UL>

<P><STRONG><a name="[31]"></a>timer_delay_ms</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, user_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_soft_timeout
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_soft_timer
</UL>

<P><STRONG><a name="[9]"></a>TIMER16_0_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, user_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER16_0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT16B0_ClearIntFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>GPIOA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>GPIOB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PWM_FAULT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PWM_TIMER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>TIMER16_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>TIMER16_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TIMER16_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WAKEUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_c32f0xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, system_c32f0xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SelectMainClkSrc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SetAHBClkDivider
</UL>

<P><STRONG><a name="[50]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_c32f0xx.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>SYS_SetAHBClkDivider</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, c32f0xx_sys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SYS_SetAHBClkDivider &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SystemInitial
</UL>

<P><STRONG><a name="[38]"></a>SYS_SelectMainClkSrc</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, c32f0xx_sys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SYS_SelectMainClkSrc &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SystemInitial
</UL>

<P><STRONG><a name="[2e]"></a>SYS_SystemInitial</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, c32f0xx_sys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SYS_SystemInitial &rArr; SYS_SelectMainClkSrc &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SelectMainClkSrc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SetAHBClkDivider
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[51]"></a>SYS_SelectWDTClkSrc</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>SYS_SelectClkOutSrc</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, c32f0xx_sys.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>

<P><STRONG><a name="[52]"></a>SYS_SetClkOutDivider</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>SYS_EnableClkOut</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>SYS_DisableClkOut</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>SYS_SetIOFilter</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>SYS_PowerDownAngIP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[57]"></a>SYS_PowerUpAngIP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[22]"></a>SYS_EnablePhrClk</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio
</UL>

<P><STRONG><a name="[58]"></a>SYS_DisablePhrClk</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>SYS_ResetPhr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>SYS_ResetSystem</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>SYS_BODResetSystem</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>SYS_GetResetStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>SYS_ClearResetStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>SYS_EnterSleep</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>SYS_SetDeepSleepWakeupPin</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>SYS_ResetDeepSleepWakeupPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>SYS_EnterDeepSleep</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>SYS_EnterPowerDown</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>SYS_IOConfig</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>SYS_IOSetPullup</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[65]"></a>SYS_IOSetPulldown</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>SYS_IOSwitchtoAng</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>SYS_IOSwitchtoDigit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>SYS_IOEnableFilter</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>SYS_IODisableFilter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, c32f0xx_sys.o(.text), UNUSED)

<P><STRONG><a name="[23]"></a>SYS_IOCONInit</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, c32f0xx_sys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SYS_IOCONInit
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio
</UL>

<P><STRONG><a name="[25]"></a>GPIO_ConfigPinsAsInput</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio
</UL>

<P><STRONG><a name="[24]"></a>GPIO_ConfigPinsAsOutput</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio
</UL>

<P><STRONG><a name="[1e]"></a>GPIO_SetPin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handler_event
</UL>

<P><STRONG><a name="[1d]"></a>GPIO_ResetPin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handler_event
</UL>

<P><STRONG><a name="[6a]"></a>GPIO_InvertOutPin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>GPIO_GetPinState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, c32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>GPIO_GetPortState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>GPIO_SetPortMask</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>GPIO_ResetPortMask</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>GPIO_ReadPort</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>GPIO_WritePort</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, c32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>GPIO_Clear_INT</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC_IRQHandler
</UL>

<P><STRONG><a name="[2f]"></a>GPIO_Read_INTState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC_IRQHandler
</UL>

<P><STRONG><a name="[26]"></a>GPIO_EnableInt</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, c32f0xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio
</UL>

<P><STRONG><a name="[3c]"></a>IIC_ResetDataBuff</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, c32f0xx_iic.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>

<P><STRONG><a name="[3b]"></a>IIC_Init</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, c32f0xx_iic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_ResetDataBuff
</UL>

<P><STRONG><a name="[3d]"></a>IIC_GetIICStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, c32f0xx_iic.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWS_IRQHandler
</UL>

<P><STRONG><a name="[71]"></a>IIC_ReadFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, c32f0xx_iic.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>IIC_SetFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_iic.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_MasterReadByte
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_MasterWriteData
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_ReadArray
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_ReadByte
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WriteArray
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WriteByte
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWS_IRQHandler
</UL>

<P><STRONG><a name="[3f]"></a>IIC_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_iic.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWS_IRQHandler
</UL>

<P><STRONG><a name="[40]"></a>IIC_SendByte</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_iic.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWS_IRQHandler
</UL>

<P><STRONG><a name="[41]"></a>IIC_GetByte</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, c32f0xx_iic.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWS_IRQHandler
</UL>

<P><STRONG><a name="[8]"></a>TWS_IRQHandler</STRONG> (Thumb, 802 bytes, Stack size 12 bytes, c32f0xx_iic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TWS_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_GetByte
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SendByte
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_ClearFlag
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SetFlag
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_GetIICStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_c32f0xx_s.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>IIC_WriteByte</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, c32f0xx_iic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SetFlag
</UL>

<P><STRONG><a name="[43]"></a>IIC_WriteArray</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, c32f0xx_iic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SetFlag
</UL>

<P><STRONG><a name="[44]"></a>IIC_ReadByte</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, c32f0xx_iic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SetFlag
</UL>

<P><STRONG><a name="[45]"></a>IIC_ReadArray</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, c32f0xx_iic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SetFlag
</UL>

<P><STRONG><a name="[46]"></a>IIC_MasterWriteData</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, c32f0xx_iic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SetFlag
</UL>

<P><STRONG><a name="[47]"></a>IIC_MasterReadByte</STRONG> (Thumb, 68 bytes, Stack size 4 bytes, c32f0xx_iic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SetFlag
</UL>

<P><STRONG><a name="[2a]"></a>CT16B0_Init</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, c32f0xx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CT16B0_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_init
</UL>

<P><STRONG><a name="[2c]"></a>CT16B0_ConfigMatch</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, c32f0xx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CT16B0_ConfigMatch
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_init
</UL>

<P><STRONG><a name="[72]"></a>CT16B0_SetTimerCounter</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>CT16B0_ResetTimerCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_init
</UL>

<P><STRONG><a name="[73]"></a>CT16B0_GetTimerCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>CT16B0_ClearIntFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER16_0_IRQHandler
</UL>

<P><STRONG><a name="[2d]"></a>CT16B0_EnableInt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_init
</UL>

<P><STRONG><a name="[74]"></a>CT16B0_DisableInt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>CT16B2_Init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, c32f0xx_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[75]"></a>CT16B2_SetCTType</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>CT16B2_SelectTimerClearSignal</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>CT16B2_SelectPriSrc</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>CT16B2_SelectSecSrc</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>CT16B2_ConfigMatch0</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>CT16B2_ConfigMatch1</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>CT16B2_ConfigMatch2</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>CT16B2_ConfigMatch3</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>CT16B2_ConfigCapture0</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>CT16B2_ConfigCapture1</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>CT16B2_ConfigCapture2</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>CT16B2_ConfigCapture3</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>CT16B2_GetCapture0Value</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>CT16B2_GetCapture1Value</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>CT16B2_GetCapture2Value</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>CT16B2_GetCapture3Value</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>CT16B2_SetTimerCounter</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>CT16B2_ResetTimerCounter</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>CT16B2_GetTimerCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>CT16B2_ClearIntFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>CT16B2_EnableInt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>CT16B2_DisableInt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, c32f0xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT16B2_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT16B0_Init
</UL>

<P><STRONG><a name="[1b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[8c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, c32f0xx_sys.o(i.__ARM_common_switch8), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SelectClkOutSrc
</UL>

<P><STRONG><a name="[8d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[8e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[8f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[27]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, config.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_init
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
